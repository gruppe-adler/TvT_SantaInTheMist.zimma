#define MODULES_DIRECTORY node_modules

#include "cfgParams.hpp"
#include "USER\cfgFactions.hpp"

#include "node_modules\@gruppe-adler\replay\ui\defines.hpp"
#include "node_modules\@gruppe-adler\replay\ui\dialog.hpp"
#include "node_modules\grad-fortifications\grad_fortifications.hpp"
#include "node_modules\grad-scoreboard\grad_scoreboard.hpp"
#include "node_modules\grad-islandconfig\cfgGradIslands.hpp"



//HEADER =======================================================================
class Header
{
    gameType = Seize;
    minPlayers = 2;
    maxPlayers = 47;
};

//LOAD SCREEN ==================================================================
onLoadName = "SANTA IN THE MIST";
onLoadMission = "";
author = "McDiod f√ºr Gruppe Adler";
loadScreen = "data\loadpic.paa";

//MISC =========================================================================
respawn = 3;
respawnDelay = 9999;
respawnVehicleDelay = 0;
respawnTemplates[] = {"Base"};
respawnOnStart = -1;
respawnDialog = 0;
disabledAI = 0;
allowFunctionsRecompile = 1;

//mcdiod, nomisum
enableDebugConsole[] = {
	"76561198044320063",
	"76561197961080101"
};

//DIALOG =======================================================================
class RscTitles {
    #include "dialogs\preparationTime\rscTitles.hpp"

    class mitm_Default {
        idd = -1;
        fadein = 0;
        fadeout = 0;
        duration = 0;
    };
};

//MISSION ======================================================================
class cfgMission {
    #include "USER\cfgMission.hpp"
};

//FUNCTIONS ====================================================================
class CfgFunctions {
    #include "functions\cfgFunctions.hpp"

    #include "node_modules\@gruppe-adler\replay\cfgFunctions.hpp"

    #include "node_modules\grad-loadout\cfgFunctions.hpp"
    #include "node_modules\grad-fortifications\cfgFunctions.hpp"
    #include "node_modules\grad-gpsTracker\cfgFunctions.hpp"
    #include "node_modules\grad-winrateTracker\cfgFunctions.hpp"
    #include "node_modules\grad-scoreboard\cfgFunctions.hpp"
};

class GRAD_Replay {
    precision = 2;                                    // precision of replay, 5 means every 5 seconds one snapshot (number)
    trackedSides[] = {"west", "independent", "east", "civilian"};    // defines the sides that will be tracked (possible are "west", "east", "independant", "civilian") (array)
    stepsPerTick = 1;                                 // defines steps played back at once (number)
    trackedVehicles = 1;                              // defines if empty and AI steered vehicles will be tracked (0/1)
    trackedAI = 1;                                    // defines if AI will be tracked (0/1)
    sendingChunkSize = 10;                            // higher number means replay loading is faster, but might cause instability / lags during loading (number)
    trackShots = 1;                                   // defines if shots will be tracked (0/1)
    upload = 1;                                       // upload replay to server (0/1)
};

//SETTINGS =====================================================================


//SOUNDS =======================================================================
class CfgSounds {

};

//WEAPONS THAT CAN HAVE MAGNIFYING SCOPES ======================================
class CfgScopeWeapons {

};

//LOADOUTS =====================================================================
class Loadouts {
    resetLoadout = 1;
    baseDelay = 5;
    handleRadios = 1;

    class Faction {
        #include "loadouts\loadouts.hpp"
    };
};

//CIVS =========================================================================
#include "USER\cfgCivilians.hpp"


//FORTIFICATIONS ===============================================================
class CfgGradFortifications {
    canDemolishDefault = 1;
    buildTimeFactor = 0.01;
    packUpTimeFactor = 0.01;
    fortificationOwnerType = "SIDE";
    demolitionTimeFactor = 1.6;

    class Fortifications {

    };
};

//WINRATE TRACKER ==============================================================
class CfgWinrateTracker {
    scoreBoardDuration = 16;                            //duration that the scoreboard will stay open
    sortBy = "WINRATES";                                //what to sort by, can be "GAMES","WINS","LOSSES","WINRATES"
    minGamesForSort = 5;                                //minimum number of games a player needs to have to be in the upper ranks
    playerStatsHeadline = "PLAYER WINRATES";            //headline for scoreboard
    teamStatsHeadline = "TEAM WINRATES";                //headline for team stats
    missionName = "TvT_MoneyInTheMist";                       //missionName that these stats are to be saved under (if not provided, actual mission name of current mission is used)
};

//NOTIFICATIONS ================================================================
class CfgNotifications
{
    class mitm_notification {
        title = "%1";
        iconPicture = "\A3\ui_f\data\map\markers\military\warning_CA.paa";
        description = "%2";
        duration = 5;
        priority = 0;
    };
};



class CfgSFX
{
    sounds[] = {};
     
    // works
    class music1
    {
        name = "music1";
        sounds[]={sfxsound};
        sfxsound[]={"data\alliwant.ogg",2,1,150,1,1,1,1};
        empty[]= {"",0,0,0,0,0,0,0};
    };

    // works
    class music2
    {
        name = "music2";
        sounds[]={sfxsound};
        sfxsound[]={"data\jb.ogg",2,1,150,1,1,1,1};
        empty[]= {"",0,0,0,0,0,0,0};
    };

    // doesnotwork
    class music3
    {
        name = "music3";
        sounds[]={sfxsound};
        sfxsound[]={"data\juljul2.ogg",2,1,150,1,1,1,1};
        empty[]= {"",0,0,0,0,0,0,0};
    };

    // works
    class music4
    {
        name = "music4";
        sounds[]={sfxsound};
        sfxsound[]={"data\lastchr.ogg",2,1,150,1,1,1,1};
        empty[]= {"",0,0,0,0,0,0,0};
    };

    // works
    class music5
    {
        name = "music5";
        sounds[]={sfxsound};
        sfxsound[]={"data\ohdu.ogg",2,1,150,1,1,1,1};
        empty[]= {"",0,0,0,0,0,0,0};
    };

    // doesnotwork
    class music6
    {
        name = "music6";
        sounds[]={sfxsound};
        sfxsound[]={"data\santababy2.ogg",2,1,150,1,1,1,1};
        empty[]= {"",0,0,0,0,0,0,0};
    };

    // works
    class music7
    {
        name = "music7";
        sounds[]={sfxsound};
        sfxsound[]={"data\warover.ogg",2,1,150,1,1,1,1};
        empty[]= {"",0,0,0,0,0,0,0};
    };
};

class CfgVehicles
{
    class music1 // class name to be used with createSoundSource
    {
        sound = "music1"; // reference to CfgSFX class
    };

    class music2 // class name to be used with createSoundSource
    {
        sound = "music2"; // reference to CfgSFX class
    };

    class music3 // class name to be used with createSoundSource
    {
        sound = "music3"; // reference to CfgSFX class
    };

    class music4 // class name to be used with createSoundSource
    {
        sound = "music4"; // reference to CfgSFX class
    };

    class music5 // class name to be used with createSoundSource
    {
        sound = "music5"; // reference to CfgSFX class
    };

    class music6 // class name to be used with createSoundSource
    {
        sound = "music6"; // reference to CfgSFX class
    };

    class music7 // class name to be used with createSoundSource
    {
        sound = "music7"; // reference to CfgSFX class
    };
};